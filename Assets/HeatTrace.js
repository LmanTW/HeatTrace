"use strict";var e,t=Object.create,a=Object.defineProperty,r=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyNames,o=Object.getPrototypeOf,i=Object.prototype.hasOwnProperty,n=(e,t,o,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of s(t))i.call(e,l)||l===o||a(e,l,{get:()=>t[l],enumerable:!(n=r(t,l))||n.enumerable});return e},l=(e,r,s)=>(s=null!=e?t(o(e)):{},n(!r&&e&&e.__esModule?s:a(s,"default",{value:e,enumerable:!0}),e)),h={};((e,t)=>{for(var r in t)a(e,r,{get:t[r],enumerable:!0})})(h,{HeatTrace:()=>J,loadReplay:()=>m}),module.exports=(e=h,n(a({},"__esModule",{value:!0}),e));var c=l(require("worker_threads")),d=require("lzma-native"),u=class{_data="";_index=0;constructor(e){e.forEach((e=>this._data+=e.toString(2).padStart(8,"0")))}readByte(){return parseInt(this._read(8),2)}readShort(){return p([this._read(8),this._read(8)],8)}readInteger(){return p([this._read(8),this._read(8),this._read(8),this._read(8)],8)}readLong(){return p([this._read(8),this._read(8),this._read(8),this._read(8),this._read(8),this._read(8),this._read(8),this._read(8)],8)}readULEB128(){const e=[];for(;;){const t=this._read(8);if(e.push(t.substring(1,8)),"0"===t[0])break}return p(e,7)}readString(){if(11===this.readByte()){const e=this.readULEB128();let t=[];for(let a=0;a<e;a++)t.push(parseInt(this._read(8),2));return Buffer.from(t).toString("utf8")}return""}_read(e){const t=this._data.substring(this._index,this._index+e);return this._index+=e,t}};function p(e,t){let a=0,r=0;for(let s=0;s<e.length;s++){a|=(parseInt(e[s],2)&(1<<t)-1)<<r,r+=t}return a}async function m(e){return new Promise((t=>{const a=new u(e),r=a.readByte(),s=a.readInteger(),o=a.readString(),i=a.readString(),n=a.readString(),l=a.readShort(),h=a.readShort(),c=a.readShort(),p=a.readShort(),m=a.readShort(),y=a.readShort(),g=a.readInteger(),f=a.readShort(),b=a.readByte();a.readInteger(),a.readString(),a.readLong();const w=a.readInteger(),_=new Uint8Array(w);for(let e=0;e<w;e++)_[e]=a.readByte();const x={version:s,gameMode:["standard","taiko","catch","mania"][r],beatmapHash:o,replayHash:n,playerName:i,great:l,ok:h,meh:c,gekis:p,katus:m,misses:y,score:g,greatestCombo:f,perfect:1===b};(0,d.decompress)(Buffer.from(_),void 0,(e=>{if(null===e)t(x);else{const a=e.toString().split(","),r=new Float64Array(a.length),s=new Float64Array(a.length),o=new Float64Array(a.length);let i=0;a.forEach(((e,t)=>{const a=e.split("|");i+=+a[0],r[t]=+a[1],s[t]=+a[2],o[t]=i})),x.cursor={xPositions:r,yPositions:s,timeStamps:o},t(x)}}))}))}var y=l(require("worker_threads"));function g(e,t,a,r){const s=new Float64Array(a.xPositions.length),o=new Float64Array(a.yPositions.length),i=new Float64Array(a.timeStamps.length);let n,l,h=0;return a.timeStamps.forEach(((e,t)=>{if(void 0===n||void 0===l){if(a.xPositions[t]<0||a.xPositions[t]>512||a.yPositions[t]<0||a.yPositions[t]>384)return;n=a.xPositions[t],l=a.yPositions[t]}else{if(Math.hypot(n-a.xPositions[t],l-a.yPositions[t])>r)return;n=a.xPositions[t],l=a.yPositions[t]}s[h]=n,o[h]=l,i[h]=e,h++})),{playerName:e,replayHash:t,xPositions:s.slice(0,h),yPositions:o.slice(0,h),timeStamps:i.slice(0,h)}}var f=l(require("jimp")),b=l(require("fs")),w=(e,t,a)=>e<t?t:e>a?a:e,_=async(e,t,a,r,s)=>new Promise((o=>{b.default.existsSync(e)?new f.default(e,((i,n)=>{if(null===i){const e=function(e,t,a,r,s){const o="min"===e?Math.min(r/t,s/a):Math.max(r/t,s/a);return{width:Math.round(t*o),height:Math.round(a*o)}}(t,n.getWidth(),n.getHeight(),a,r);n.resize(e.width,e.height);const i=new SharedArrayBuffer(n.bitmap.data.length),l=new Uint8Array(i);for(let e=0;e<n.bitmap.data.length;e+=4)l[e]=n.bitmap.data[e],l[e+1]=n.bitmap.data[e+1],l[e+2]=n.bitmap.data[e+2],l[e+3]=n.bitmap.data[e+3],void 0!==s.brightness&&(l[e]=w(l[e]-l[e]*(1-s.brightness),0,255),l[e+1]=w(l[e+1]-l[e+1]*(1-s.brightness),0,255),l[e+2]=w(l[e+2]-l[e+2]*(1-s.brightness),0,255));o({error:!1,texture:{width:e.width,height:e.height,data:i}})}else o({error:!0,message:`Failed To Load Texture: "${e}"`})})):o({error:!0,message:`Texture File Not Found: "${e}"`})}));var x,v=l(require("jimp")),k=(e,t,a,r,s)=>(e-t)/(a-t)*(s-r)+r;(x||(x={})).getGradientColor=function(e,t){const a=1/(t.length-1);let r=Math.floor(e/a);r>=t.length&&(r=t.length-1);const s=t[r],o=t[r+1]||t[r],i=e%a/a;let n=Math.round(s.r+(o.r-s.r)*i),l=Math.round(s.g+(o.g-s.g)*i),h=Math.round(s.b+(o.b-s.b)*i);return{r:Math.min(n,255),g:Math.min(l,255),b:Math.min(h,255)}};var M=x,j=class{static renderBackground(e,t,a,r){const s=new SharedArrayBuffer(Math.round(e*t*4)),o=new Uint8Array(s);if("color"===r.background.type)for(let e=0;e<o.length;e+=4)o[e]=w(r.background.color.r+255*r.background.brightness,0,255),o[e+1]=w(r.background.color.g+255*r.background.brightness,0,255),o[e+2]=w(r.background.color.b+255*r.background.brightness,0,255),o[e+3]=255;else if("image"===r.background.type){const s=a[r.background.image],i=e/2-s.width/2,n=t/2-s.height/2;this._drawTexture(o,e,t,s,Math.round(i),Math.round(n),255)}return{layer:0,pixels:s}}static renderHeatmap(e,t){const a=new Float64Array(e),r=new SharedArrayBuffer(4*a.length),s=new Uint8Array(r);return a.forEach(((e,a)=>{if(e>0){e=k(e*t.heatBoost,0,1,0,1),a*=4;const r=M.getGradientColor(e,t.colors);s[a]=w(r.r,0,255),s[a+1]=w(r.g,0,255),s[a+2]=w(r.b,0,255),s[a+3]=w(Math.round(k(e,0,1,255*t.traceOpacity[0],255*t.traceOpacity[1])),0,255)}})),{layer:1,pixels:r}}static renderCursors(e,t,a,r,s){const o=new SharedArrayBuffer(Math.round(e*t*4)),i=new Uint8Array(o),n="color"===s.cursor.type?s.cursor.colors.length:s.cursor.images.length;return a.forEach((a=>{let o=function(e){let t=0;for(let a=0;a<e.length;a++)t+=e.charCodeAt(a);return t}("player"===s.cursor.distribution?a.playerName:a.replayHash)%n;if(o>=n&&(o=n-1),"color"===s.cursor.type){const r=Math.round((e+t)/300*s.cursor.size);this._drawCircle(i,e,t,Math.round(k(a.x,0,512,0,e)),Math.round(k(a.y,0,384,0,t)),r,s.cursor.colors[o],255*s.cursor.opacity)}else if("image"===s.cursor.type){let n=k(a.x,0,512,0,e),l=k(a.y,0,384,0,t);const h=r[s.cursor.images[o]];"center"===s.cursor.imageAlign&&(n-=h.width/2,l-=h.height/2),this._drawTexture(i,e,t,h,Math.round(n),Math.round(l),255*s.cursor.opacity)}})),{layer:2,pixels:o}}static async renderImage(e,t,a,r,s){return new Promise((o=>{const i=new Uint8Array(Math.round(a*r*4));s.sort(((e,t)=>e.layer-t.layer)).forEach((e=>{const t=new Uint8Array(e.pixels);for(let e=0;e<t.length;e+=4)if(t[e+3]>0){const a=Math.max(i[e+3],t[e+3]),r=k(t[e+3],0,a,0,1);i[e]=w(i[e]+(t[e]-i[e])*r,0,255),i[e+1]=w(i[e+1]+(t[e+1]-i[e+1])*r,0,255),i[e+2]=w(i[e+2]+(t[e+2]-i[e+2])*r,0,255),i[e+3]=w(255*r,0,255)}}));for(let e=0;e<i.length;e+=4)i[e+3]=255;if("raw"===e){const e=new SharedArrayBuffer(a*r*4);new Uint8Array(e).set(i,0),o(e)}else new v.default(a,r,((a,r)=>{r.bitmap.data=Buffer.from(i),r.quality(100*t),"png"===e?r.getBuffer(v.default.MIME_PNG,((e,t)=>{const a=new SharedArrayBuffer(t.length);new Uint8Array(a).set(t,0),o(a)})):r.getBuffer(v.default.MIME_JPEG,((e,t)=>{const a=new SharedArrayBuffer(t.length);new Uint8Array(a).set(t,0),o(a)}))}))}))}static _drawCircle(e,t,a,r,s,o,i,n){for(let l=-o;l<=o;l++)for(let h=-o;h<=o;h++)if(l*l+h*h<=o*o){const o=Math.round(r+l),c=Math.round(s+h);if(o>=0&&o<t&&c>=0&&c<a){const a=4*(o+c*t);e[a]=w(i.r,0,255),e[a+1]=w(i.g,0,255),e[a+2]=w(i.b,0,255),e[a+3]=w(n,0,255)}}}static _drawTexture(e,t,a,r,s,o,i){const n=new Uint8Array(r.data);let l=0;for(let h=o;h<o+r.height;h++)for(let o=s;o<s+r.width;o++){if(o>=0&&o<t&&h>=0&&h<a){const a=4*(o+h*t);n[l+3]>0&&(e[a]=w(n[l],0,255),e[a+1]=w(n[l+1],0,255),e[a+2]=w(n[l+2],0,255),e[a+3]=w(i,0,255))}l+=4}}};var S=class{static calculateHeatmap(e,t,a,r,s,o,i){const n=new Uint32Array(e*t),l=Math.round((e+t)/900*i.traceSize);let h=o.xPositions[0],c=o.yPositions[0];const d=new Map;for(let s=0;s<o.timeStamps.length-1;s++)if(o.timeStamps[s]>=a&&o.timeStamps[s]<=r)h=o.xPositions[s],c=o.yPositions[s],d.clear(),C(Math.round(k(h,0,512,0,e)),Math.round(k(c,0,384,0,t)),Math.round(k(o.xPositions[s+1],0,512,0,e)),Math.round(k(o.yPositions[s+1],0,384,0,t))).forEach((a=>{if(l>1)if(l%2==0){const r=l/2-1,s=l/2;for(let o=a.x-r;o<=a.x+s;o++)for(let i=a.y-r;i<=a.y+s;i++)o>=0&&o<e&&i>=0&&i<t&&(d.has(`${o},${i}`)||(n[o+i*e]++,d.set(`${o},${i}`,!0)))}else{const r=(l-1)/2;for(let s=a.x-r;s<=a.x+r;s++)for(let o=a.y-r;o<=a.y+r;o++)s>=0&&s<e&&o>=0&&o<t&&(d.has(`${s},${o}`)||(n[s+o*e]++,d.set(`${s},${o}`,!0)))}else a.x>=0&&a.x<e&&a.y>=0&&a.y<t&&n[a.x+a.y*e]++}));else if(o.timeStamps[s]>r)break;const u=new Uint32Array(s);return n.forEach(((e,t)=>{e>0&&Atomics.add(u,t,e)})),{playerName:o.playerName,replayHash:o.replayHash,x:h,y:c}}static normalizeHeatmap(e){const t=new Uint32Array(e);let a=1;t.forEach((e=>{e>a&&(a=e)}));const r=new SharedArrayBuffer(8*t.length),s=new Float64Array(r);return t.forEach(((e,t)=>s[t]=k(e,0,a,0,1))),r}};function C(e,t,a,r){const s=[],o=Math.abs(a-e),i=Math.abs(r-t),n=e<a?1:-1,l=t<r?1:-1;let h=o-i;for(;e!==a||t!==r;){s.push({x:e,y:t});let a=2*h;a>-i&&(h-=i,e+=n),a<o&&(h+=o,t+=l)}return s.push({x:a,y:r}),s}function I(e){y.default.parentPort.postMessage(e)}var P=l(require("ffmpeg-static")),D=l(require("fluent-ffmpeg")),A=l(require("path")),T=l(require("fs")),F=(e,t)=>void 0===e?t:e,$=e=>{const t=[];if(e.forEach((e=>{const a=function(e){if(void 0!==e.min&&e.value<e.min)return{error:!0,message:`Value "${e.name}" Is Less Than ${e.min} (Requirement: >= ${e.min}${void 0===e.max?"":` And <= ${e.max}`})`};if(void 0!==e.max&&e.value>e.max)return{error:!0,message:`Value "${e.name}" Is More Than ${e.max} (Requirement: ${void 0===e.min?"":`>= ${e.min} And `}<= ${e.max})`};return{error:!1}}(e);a.error&&t.push(a.message)})),t.length>0)throw new Error(`Values Check Failed (${t.length}):\n${t.map((e=>`| ${e}`)).join("\n")}\n`)};var R=l(require("os"));var B=class{_Core;_textures={};constructor(e){this._Core=e}get textures(){return this._textures}async loadTextures(){const e=[],t=this._Core.options.style;if("image"===this._Core.options.style.cursor.type){const a=(this._Core.options.width+this._Core.options.height)/50*t.cursor.size;for(let r of t.cursor.images)e.push({type:"loadTexture",filePath:r,scaleType:"min",width:a,height:a,effect:{}})}"image"===this._Core.options.style.background.type&&e.push({type:"loadTexture",filePath:t.background.image,scaleType:"max",width:this._Core.options.width,height:this._Core.options.height,effect:{brightness:t.background.brightness}});const a={},r=await this._Core.WorkerManager.createBatch(e);for(let e of r){if(e.error)return{error:!0,message:e.message};a[e.data.filePath]=e.data.texture}return this._textures=a,{error:!1}}unloadTextures(){this._textures={}}},z=l(require("worker_threads")),H=(e,t)=>{let a=O(e);for(;t.includes(a);)a=O(e);return a};function O(e){let t="";for(let s=0;s<e;s++)t+=E[(a=0,r=E.length-1,Math.floor(Math.random()*r)+a)];var a,r;return t}var E="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789",L=class{_workers={};_batches={};_jobs={};async startWorkers(e,t){const a=[];for(let r=0;r<e;r++){const e=H(5,Object.keys(this._workers));this._workers[e]={state:"starting",worker:new z.default.Worker(__filename,{workerData:{type:"HeatTrace",textures:t}})},a.push(this._handleWorker(e))}await Promise.all(a)}async stopWorkers(){for(let e of Object.keys(this._workers))await this._workers[e].worker.terminate(),delete this._workers[e]}async createBatch(e,t){return new Promise((a=>{if(0===e.length)a([]);else{const r={totalJobs:e.length,jobs:{},results:[],progressCallback:t,finishCallback:a};e.forEach((e=>{r.jobs[H(5,Object.keys(r.jobs))]={state:"waiting",data:e}})),this._batches[H(5,Object.keys(this._batches))]=r,void 0!==r.progressCallback&&r.progressCallback({total:r.totalJobs,finished:0}),this._assignJobs()}}))}async createJob(e){return new Promise((t=>{this._jobs[H(5,Object.keys(this._jobs))]={state:"waiting",data:e,callback:t},this._assignJobs()}))}_assignJobs(){for(let e of Object.keys(this._workers)){const t=this._workers[e];if("idle"===t.state){const a=this._getJob();if(void 0===a)break;let r;if(void 0===a.batchID)this._jobs[a.jobID].state="inProgress",r=this._jobs[a.jobID].data;else{const e=this._batches[a.batchID];e.jobs[a.jobID].state="inProgress",r=e.jobs[a.jobID].data}t.state="working",this._sendMessage(e,{type:"assignJob",batchID:a.batchID,jobID:a.jobID,jobData:r})}}}_getJob(){for(let e of Object.keys(this._jobs))if("waiting"===this._jobs[e].state)return{jobID:e};for(let e of Object.keys(this._batches)){const t=this._batches[e];for(let a of Object.keys(t.jobs))if("waiting"===t.jobs[a].state)return{batchID:e,jobID:a}}}_sendMessage(e,t){this._workers[e].worker.postMessage(t)}async _handleWorker(e){return new Promise((t=>{const a=this._workers[e];a.worker.on("message",(e=>{if("readied"===e.type)a.state="idle",t();else if("jobFinished"===e.type){if(void 0===e.batchID){const t=this._jobs[e.jobID];void 0!==t.callback&&t.callback(e.jobResult),delete this._jobs[e.jobID]}else{const t=this._batches[e.batchID];delete t.jobs[e.jobID],t.results.push(e.jobResult),void 0!==t.progressCallback&&t.progressCallback({total:t.totalJobs,finished:t.results.length}),t.results.length>=t.totalJobs&&(t.finishCallback(t.results),delete this._batches[e.batchID])}a.state="idle",this._assignJobs()}}))}))}},W=class{_Core;_cursorsData=[];_frames=0;_frameInterval=0;constructor(e){this._Core=e}get cursorsData(){return this._cursorsData}get frames(){return this._frames}get frameInterval(){return this._frameInterval}async loadReplays(e,t){if("initialized"!==this._Core.state)throw new Error(`Cannot Load Replays: ${this._Core.state}`);const a=e.map((e=>({type:"loadReplay",data:e,maxCursorTravelDistance:this._Core.options.maxCursorTravelDistance}))),r=await this._Core.WorkerManager.createBatch(a,t);let s,o=0,i=0,n=0;const l=[];for(let e of r)if(e.error)n++;else{if(void 0===s)s=e.data.beatmapHash;else if(e.data.beatmapHash!==s)return{error:!0,message:"Found Replays With Different Beatmaps"};const t=e.data.cursorData.timeStamps[e.data.cursorData.timeStamps.length-1];t>o&&(o=t),l.push(e.data.cursorData),i++}return this._cursorsData=l,this._frameInterval=1e3/this._Core.options.videoFPS/this._Core.options.videoSpeed,this._frames=Math.round(o/this._frameInterval),{error:!1,data:{loaded:i,failed:n}}}unloadReplays(){this._cursorsData=[]}},U=async(e,t,a)=>{const r=await async function(e,t,a){if("initialized"!==e.state)throw new Error(`Cannot Calculate The Heatmap: ${e.state}`);const r=new SharedArrayBuffer(e.options.width*e.options.height*4),s=t*e.ReplayManager.frameInterval,o=e.ReplayManager.cursorsData.map((t=>({type:"calculateHeatmap",width:e.options.width,height:e.options.height,start:s-1e3*e.options.style.traceLength,end:s,heatmap:r,cursorData:t,style:e.options.style}))),i=await e.WorkerManager.createBatch(o,a),n=(await e.WorkerManager.createBatch([{type:"normalizeHeatmap",heatmap:r}]))[0].normalizedHeatmap;return{heatmap:n,cursorsInfo:i.map((e=>e.cursorInfo))}}(e,t,(e=>{void 0!==a&&a({type:"calculatingHeatmaps",total:e.total,finished:e.finished})})),s=[{type:"renderLayer",layerData:{type:"heatmap",heatmap:r.heatmap},style:e.options.style}];"none"!==e.options.style.background.type&&s.push({type:"renderLayer",layerData:{type:"background",width:e.options.width,height:e.options.height,textures:e.TextureManager.textures},style:e.options.style}),"none"!==e.options.style.cursor.type&&s.push({type:"renderLayer",layerData:{type:"cursors",width:e.options.width,height:e.options.height,cursors:r.cursorsInfo,textures:e.TextureManager.textures},style:e.options.style});return(await e.WorkerManager.createBatch(s,(e=>{void 0!==a&&a({type:"renderingLayers",total:e.total,finished:e.finished})}))).map((e=>e.layer))};var q=class{_state="none";_options;WorkerManager;TextureManager;ReplayManager;constructor(e){this._options=function(e){const t=F(e.style,{}),a=F(t.cursor,{}),r=F(t.background,{});return{width:Math.round(F(e.width,512)),height:Math.round(F(e.height,384)),style:{heatBoost:F(t.heatBoost,3),traceSize:F(t.traceSize,1),traceOpacity:F(t.traceOpacity,[1,1]),traceLength:F(t.traceLength,1/0),colors:F(t.colors,[{r:0,g:0,b:0},{r:106,g:4,b:15},{r:208,g:0,b:0},{r:232,g:93,b:4},{r:250,g:163,b:7},{r:255,g:255,b:255}]),cursor:{type:F(a.type,"none"),distribution:F(a.distribution,"player"),size:F(a.size,1),opacity:F(a.opacity,1),colors:F(a.colors,[{r:214,g:40,b:40},{r:247,g:127,b:0},{r:252,g:191,b:73},{r:234,g:226,b:183}]),images:F(a.images,[]),imageAlign:F(a.imageAlign,"start")},background:{type:F(r.type,"none"),brightness:F(r.brightness,1),color:F(r.color,{r:0,g:0,b:0}),image:F(r.image,"")}},imageFormat:F(e.imageFormat,"png"),imageQuality:F(e.imageQuality,1),videoFPS:F(e.videoFPS,30),videoSpeed:F(e.videoSpeed,1),threads:F(e.threads,R.default.cpus().length/2),maxFrameQueue:F(e.maxFrameQueue,1),maxCursorTravelDistance:F(e.maxCursorTravelDistance,200)}}(e),function(e){$([{name:"options.width",value:e.width,min:1},{name:"options.height",value:e.height,min:1},{name:"options.style.traceSize",value:e.style.traceSize,min:0},{name:"options.style.traceOpacity[0]",value:e.style.traceOpacity[0],min:0,max:1},{name:"options.style.traceOpacity[1]",value:e.style.traceOpacity[1],min:0,max:1},{name:"options.style.traceLength",value:e.style.traceLength,min:0},{name:"options.style.cursor.size",value:e.style.cursor.size,min:0},{name:"options.style.cursor.opacity",value:e.style.cursor.opacity,min:0,max:1},{name:"options.style.background.brightness",value:e.style.background.brightness,min:0},{name:"options.imageQuality",value:e.imageQuality,min:.1,max:1},{name:"options.videoFPS",value:e.videoFPS,min:1},{name:"options.videoSpeed",value:e.videoFPS,min:.1},{name:"options.threads",value:e.threads,min:1},{name:"options.maxFrameQueue",value:e.maxFrameQueue,min:1},{name:"options.maxCursorTravelDistance",value:e.maxCursorTravelDistance,min:0}]),e.style.colors.forEach(((e,t)=>{$([{name:`options.style.colors[${t}].r`,value:e.r,min:0,max:255},{name:`options.style.colors[${t}].g`,value:e.g,min:0,max:255},{name:`options.style.colors[${t}].b`,value:e.b,min:0,max:255}])})),e.style.cursor.colors.forEach(((e,t)=>{$([{name:`options.style.cursor.colors[${t}].r`,value:e.r,min:0,max:255},{name:`options.style.cursor.colors[${t}].g`,value:e.g,min:0,max:255},{name:`options.style.cursor.colors[${t}].b`,value:e.b,min:0,max:255}])})),$([{name:"options.style.background.color.r",value:e.style.background.color.r,min:0,max:255},{name:"options.style.background.color.g",value:e.style.background.color.g,min:0,max:255},{name:"options.style.background.color.b",value:e.style.background.color.b,min:0,max:255}])}(this._options),this.WorkerManager=new L,this.TextureManager=new B(this),this.ReplayManager=new W(this)}get state(){return this._state}get options(){return this._options}async initialize(e){if("none"!==this._state)throw new Error(`Cannot Initialize HeatTrace: ${this._state}`);return this._state="initializing",void 0!==e&&e({type:"startingWorkers"}),await this.WorkerManager.startWorkers(this._options.threads,this.TextureManager.textures),void 0!==e&&e({type:"loadingTextures"}),await this.TextureManager.loadTextures(),this._state="initialized",{error:!1}}async terminate(){if("initialized"!==this._state)throw new Error(`Cannot Load Terminate HeatTrace: ${this._state}`);this._state="terminating",await this.WorkerManager.stopWorkers(),this.TextureManager.unloadTextures(),this.ReplayManager.unloadReplays(),this._state="none"}async loadReplays(e,t){if("initialized"!==this._state)throw new Error(`Cannot Load Replays: ${this._state}`);const a=await this.ReplayManager.loadReplays(e,t);return a.error?{error:!0,message:a.message}:{error:!1,data:{loaded:a.data.loaded,failed:a.data.failed}}}async renderImage(e,t){if("initialized"!==this._state)throw new Error(`Cannot Render An Image: ${this._state}`);$([{name:"frame",value:e,min:1,max:this.ReplayManager.frames}]);return new Uint8Array((await this.WorkerManager.createBatch([{type:"renderImage",format:this._options.imageFormat,quality:this._options.imageQuality,width:this._options.width,height:this._options.height,layers:await U(this,F(e,this.ReplayManager.frames),t)}],(e=>{void 0!==t&&t({type:"encodingImage",total:e.total,finished:e.finished})})))[0].data)}async renderVideo(e,t,a,r){if("initialized"!==this._state)throw new Error(`Cannot Render An Image: ${this._state}`);return t=F(t,1),a=F(a,this.ReplayManager.frames),$([{name:"start",value:t,min:1,max:a},{name:"end",value:a,min:Math.max(t,1),max:this.ReplayManager.frames}]),new Promise((async s=>{T.default.existsSync(e)||T.default.mkdirSync(e),T.default.existsSync(A.default.join(e,"Frames"))||T.default.mkdirSync(A.default.join(e,"Frames"));let o=t,i=0,n=a-t,l=0;void 0!==r&&r({type:"renderingFrames",total:n,finished:l});const h=async()=>{if(o<=a){let t=o;o++,i++,this.WorkerManager.createJob({type:"renderImage",format:"png",quality:1,width:this._options.width,height:this._options.height,layers:await U(this,t)}).then((o=>{T.default.writeFileSync(A.default.join(e,"Frames",`${t.toString().padStart(5,"0")}.png`),new Uint8Array(o.data)),i--,l++,void 0!==r&&r({type:"renderingFrames",total:n,finished:l}),t===a?(void 0!==r&&r({type:"encodingVideo",total:1,finished:0}),(0,D.default)(A.default.join(e,"Frames","%05d.png")).setFfmpegPath(P.default).output(A.default.join(e,"Result.mp4")).inputFPS(this._options.videoFPS).outputOptions("-pix_fmt yuv420p").outputOptions(`-threads ${this._options.threads}`).once("end",(()=>{void 0!==r&&r({type:"encodingVideo",total:1,finished:1}),s(A.default.join(e,"Result.mp4"))})).run()):h()})),i<this._options.maxFrameQueue&&h()}};h()}))}},J=class{_Core;constructor(e){this._Core=new q(e||{})}get state(){return this._Core.state}get options(){return this._Core.options}async initialize(e){return await this._Core.initialize(e)}async terminate(){await this._Core.terminate()}async loadReplays(e,t){return await this._Core.loadReplays(e,t)}async renderImage(e,t){return await this._Core.renderImage(e,t)}async renderVideo(e,t,a,r){return await this._Core.renderVideo(e,t,a,r)}};c.default.isMainThread||(y.default.parentPort.on("message",(async e=>{if("assignJob"===e.type){const t=e.jobData;let a;if("loadTexture"===t.type){const e=await _(t.filePath,t.scaleType,t.width,t.height,t.effect);a={type:"loadTexture",error:e.error,message:e.message,data:{filePath:t.filePath,texture:e.texture}}}else if("loadReplay"===t.type){const e=await m(t.data);a="standard"!==e.gameMode?{type:"loadReplay",error:!0,message:"Unsupport Game Mode"}:void 0===e.cursor?{type:"loadReplay",error:!0,message:"Failed To Decompress Cursor Data"}:{type:"loadReplay",error:!1,data:{beatmapHash:e.beatmapHash,cursorData:g(e.playerName,e.replayHash,e.cursor,t.maxCursorTravelDistance)}}}else if("calculateHeatmap"===t.type)a={type:"calculateHeatmap",cursorInfo:S.calculateHeatmap(t.width,t.height,t.start,t.end,t.heatmap,t.cursorData,t.style)};else if("normalizeHeatmap"===t.type)a={type:"normalizeHeatmap",normalizedHeatmap:S.normalizeHeatmap(t.heatmap)};else if("renderLayer"===t.type){const e=t.layerData;"background"===e.type?a={type:"renderLayer",layer:j.renderBackground(e.width,e.height,e.textures,t.style)}:"heatmap"===e.type?a={type:"renderLayer",layer:j.renderHeatmap(e.heatmap,t.style)}:"cursors"===e.type&&(a={type:"renderLayer",layer:j.renderCursors(e.width,e.height,e.cursors,e.textures,t.style)})}else"renderImage"===t.type&&(a={type:"renderImage",data:await j.renderImage(t.format,t.quality,t.width,t.height,t.layers)});I({type:"jobFinished",batchID:e.batchID,jobID:e.jobID,jobResult:a})}})),I({type:"readied"}));